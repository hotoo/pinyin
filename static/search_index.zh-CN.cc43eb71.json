[{"id":14,"title":"CHANGELOG","content":"#\n\n--------------------------------------------------------------------------------\n\n\n4.0.0-alpha.0#\n\n * optionalPeerDependencies nodejieba, @node-rs/jieba, and segmentit.\n * 打包为 esm 和 umd 格式。\n\n\n3.1.0#\n\n * release 3.1.0, with output amd format.\n\n\n3.0.0-alpha.7 (2023-11-20)#\n\n * feat: dynamic import optional dependencies.\n\n\n3.0.0-alpha.6 (2023-11-12)#\n\n * feat: support Intl.Segmenter for segment.\n * dict: 雪茄\n\n\n3.0.0-alpha.5 (2022-07-12)#\n\n * fix: npm publish 中没有保护 esm 目录。\n * fix: dict: 修复“呢”的拼音默认顺序。\n * feat: dict: 新增“行不行”词语拼音。\n\n\n3.0.0-alpha.4 (2022-04-01)#\n\n * dict: “着落” 拼音频率调整。\n\n\n3.0.0-alpha.3 (2022-03-27)#\n\n * fix: phrases dict of \"苹\". #326\n\n\n3.0.0-alpha.2 (2022-03-22)#\n\n * feat: pinyin implemention by typescript language.\n * feat: full Hanzi support for Web browser and Node.js\n * feat: segment support in Web browser and Node.js\n * feat: ES module and CommonJS module.\n * feat: support surname mode.\n * feat: better compact method.\n * fix: support specific segment for cli #322\n\n\n2.11.1 (2022-03-09)#\n\n * deps(nodejieba): 锁定 nodejieba 依赖版本 #315, #316\n\n\n2.11.0 (2022-02-25)#\n\n * feat(surname): 支持姓氏拼音模式，优先处理姓氏读音。 fixed #288\n\n\n2.10.2 (2021-04-11)#\n\n * feat(cli): pinyin cli support group by phrases.\n\n\n2.10.1 (2021-04-11)#\n\n * dict: fixed \"〇桔吗\" pinyin dict.\n\n\n2.10.0 (2021-04-11)#\n\n * feat(group): Support group\n * dict: fixed \"别鹤离鸾脏䄜\" pinyin dict.\n\n\n2.9.1 (2020-05-03)#\n\n * dict: fixed 氓's pinyin dict. #272\n\n\n2.9.0 (2019-05-09)#\n\n * dict: upgrade web pinyin dict. #243\n\n\n2.8.3 (2017-03-31)#\n\n * fixed: 贾，默认读音改为：jiǎ #130\n\n\n2.8.2 (2017-03-13)#\n\n * dict: 厦门。fixed #122\n\n\n2.8.0 (2016-07-18)#\n\n * feat(compare): Add pinyin.compare for sort by pinyin. #104, #106.\n\n\n2.7.4 (2016-07-01)#\n\n * fixed phrases dict. #102, #103.\n\n\n2.7.3 (2016-05-15)#\n\n * fixed 的's pinyin. #94, #95\n\n\n2.7.2 (2016-05-11)#\n\n * 修复了词典拼音库。 #93\n\n\n2.7.1 (2016-02-22)#\n\n * fix(web): use strict. #82\n\n\n2.7.0 (2016-02-04)#\n\n * feat(TO3NE): TONE style by number [0-4] after phonetic notation character.\n   #79\n\n\n2.6.2 (2015-08-25)#\n\n * Add iojs-3 support. #60, #61, #62.\n\n\n2.6.1 (2015-08-23)#\n\n * #57, #58 根据《汉语拼音方案》，y, w, 不是声母。\n * #56 ü (yu) 不是声母。\n\n\n2.6.0 (2015-08-12)#\n\n * deps(nodejieba): nodejieba is optional dependency now. fixed #45.\n * test(eslint): update code style and test by eslint.\n\n\n2.5.1 (2015-08-01)#\n\n * deps(nodejieba): upgrade nodejieba@1.2.2\n\n\n2.5.0 (2015-06-18)#\n\n * featute（分词）: 增加分词选项，默认不开启分词（不兼容选项） #45\n * test(performance): 增加了性能测试。\n\n\n2.4.4 (2015-06-08)#\n\n * Upgrade dependency nodejieba@1.0.1, fixed #41\n\n\n2.4.3 (2015-06-08)#\n\n * Fixed #40 更新 nodejieba 依赖，修复 nodejieba 对 iojs@2.0 的支持。\n\n\n2.4.2 (2015-05-14)#\n\n * Fixed #38 , 结巴分词的词典路径问题。\n\n\n2.4.1 (2015-05-13)#\n\n * Fixed: #33, #37 便宜\n\n\n2.4.0 (2015--05-13)#\n\n * Update 分词模块从 Segment 切换为 Jieba。fixed #36\n\n\n2.3.3 (2014-07-29)#\n\n * Fixed #17 多音词『朝阳』\n\n\n2.3.2 (2014-06-03)#\n\n * 由于 #15, npm@1.4.12 的 bug 导致在 npmjs.org 发布的 pinyin@2.3.0 和 pinyin@2.3.1 shasum\n   值计算错误，新版 npm 无法正常安装，所以下线处理， 并发布了 pinyin@2.3.2。\n\n\n2.3.1 (2014-05-27)#\n\n * 更新了针对 Web 环境的拼音库，使用 3500 个常用字库。\n\n\n2.3.0 (2014-05-15)#\n\n * 托 spm@3.x 的福，Node 和 Web 版融合到一个仓库中。hotoo/node-pinyin 即将下线。\n\n\n2.2.1 (2014-05-24)#\n\n * Fixed: hotoo/node-pinyin#23 , extend(default, more.hasOwnProperty is not\n   function).\n\n\n2.2.0 (2014-02-17)#\n\n * Update: 使用全新的，较为完整的拼音库。\n * Update: 部分算法有调整。\n\n\n2.1.3 (2014-02-06)#\n\n * Fixed hotoo/node-pinyin#19, missing some words.\n\n\n2.1.2 (2014-01-26)#\n\n * Fixed #12, 补充缺失的『楞』字拼音。\n\n\n2.1.1 (2013-09-08)#\n\n * Fixed: 补充缺失的『特』字拼音。\n * Fixed: hotoo/node-pinyin#16, 部分修复了忽略空白的问题。\n\n\n2.0.2 (2013-08-09)#\n\n * hotoo/node-pinyin#9 新增命令行支持。 Thanks @lyuehh\n\n\n2.1.0 (2013-07-12)#\n\n * #6 调整返回的结果集结构，非汉字部分以原始字符和原始风格返回。\n   \n   \n\n\nfor Node#\n\n * Fix: 直接操作拼音库，影响后续的拼音转换正确性问题。\n * Update: 非中文原样返回，不做任何处理。\n * Add: 完善测试用例。\n * Update: 其他的一些优化。","routePath":"/CHANGELOG","lang":"zh-CN","toc":[{"text":"4.0.0-alpha.0","id":"400-alpha0","depth":2,"charIndex":85},{"text":"3.1.0","id":"310","depth":2,"charIndex":194},{"text":"3.0.0-alpha.7 (2023-11-20)","id":"300-alpha7-2023-11-20","depth":2,"charIndex":246},{"text":"3.0.0-alpha.6 (2023-11-12)","id":"300-alpha6-2023-11-12","depth":2,"charIndex":324},{"text":"3.0.0-alpha.5 (2022-07-12)","id":"300-alpha5-2022-07-12","depth":2,"charIndex":412},{"text":"3.0.0-alpha.4 (2022-04-01)","id":"300-alpha4-2022-04-01","depth":2,"charIndex":-1},{"text":"3.0.0-alpha.3 (2022-03-27)","id":"300-alpha3-2022-03-27","depth":2,"charIndex":586},{"text":"3.0.0-alpha.2 (2022-03-22)","id":"300-alpha2-2022-03-22","depth":2,"charIndex":651},{"text":"2.11.1 (2022-03-09)","id":"2111-2022-03-09","depth":2,"charIndex":992},{"text":"2.11.0 (2022-02-25)","id":"2110-2022-02-25","depth":2,"charIndex":1065},{"text":"2.10.2 (2021-04-11)","id":"2102-2021-04-11","depth":2,"charIndex":1137},{"text":"2.10.1 (2021-04-11)","id":"2101-2021-04-11","depth":2,"charIndex":1212},{"text":"2.10.0 (2021-04-11)","id":"2100-2021-04-11","depth":2,"charIndex":1270},{"text":"2.9.1 (2020-05-03)","id":"291-2020-05-03","depth":2,"charIndex":1361},{"text":"2.9.0 (2019-05-09)","id":"290-2019-05-09","depth":2,"charIndex":1421},{"text":"2.8.3 (2017-03-31)","id":"283-2017-03-31","depth":2,"charIndex":1483},{"text":"2.8.2 (2017-03-13)","id":"282-2017-03-13","depth":2,"charIndex":1534},{"text":"2.8.0 (2016-07-18)","id":"280-2016-07-18","depth":2,"charIndex":1580},{"text":"2.7.4 (2016-07-01)","id":"274-2016-07-01","depth":2,"charIndex":-1},{"text":"2.7.3 (2016-05-15)","id":"273-2016-05-15","depth":2,"charIndex":1730},{"text":"2.7.2 (2016-05-11)","id":"272-2016-05-11","depth":2,"charIndex":1783},{"text":"2.7.1 (2016-02-22)","id":"271-2016-02-22","depth":2,"charIndex":1823},{"text":"2.7.0 (2016-02-04)","id":"270-2016-02-04","depth":2,"charIndex":1875},{"text":"2.6.2 (2015-08-25)","id":"262-2015-08-25","depth":2,"charIndex":1983},{"text":"2.6.1 (2015-08-23)","id":"261-2015-08-23","depth":2,"charIndex":2044},{"text":"2.6.0 (2015-08-12)","id":"260-2015-08-12","depth":2,"charIndex":2122},{"text":"2.5.1 (2015-08-01)","id":"251-2015-08-01","depth":2,"charIndex":-1},{"text":"2.5.0 (2015-06-18)","id":"250-2015-06-18","depth":2,"charIndex":2336},{"text":"2.4.4 (2015-06-08)","id":"244-2015-06-08","depth":2,"charIndex":2432},{"text":"2.4.3 (2015-06-08)","id":"243-2015-06-08","depth":2,"charIndex":2504},{"text":"2.4.2 (2015-05-14)","id":"242-2015-05-14","depth":2,"charIndex":2585},{"text":"2.4.1 (2015-05-13)","id":"241-2015-05-13","depth":2,"charIndex":2636},{"text":"2.4.0 (2015--05-13)","id":"240-2015--05-13","depth":2,"charIndex":2681},{"text":"2.3.3 (2014-07-29)","id":"233-2014-07-29","depth":2,"charIndex":2749},{"text":"2.3.2 (2014-06-03)","id":"232-2014-06-03","depth":2,"charIndex":2793},{"text":"2.3.1 (2014-05-27)","id":"231-2014-05-27","depth":2,"charIndex":2947},{"text":"2.3.0 (2014-05-15)","id":"230-2014-05-15","depth":2,"charIndex":3005},{"text":"2.2.1 (2014-05-24)","id":"221-2014-05-24","depth":2,"charIndex":3089},{"text":"2.2.0 (2014-02-17)","id":"220-2014-02-17","depth":2,"charIndex":3202},{"text":"2.1.3 (2014-02-06)","id":"213-2014-02-06","depth":2,"charIndex":3272},{"text":"2.1.2 (2014-01-26)","id":"212-2014-01-26","depth":2,"charIndex":3346},{"text":"2.1.1 (2013-09-08)","id":"211-2013-09-08","depth":2,"charIndex":3396},{"text":"2.0.2 (2013-08-09)","id":"202-2013-08-09","depth":2,"charIndex":3488},{"text":"2.1.0 (2013-07-12)","id":"210-2013-07-12","depth":2,"charIndex":3558},{"text":"for Node","id":"for-node","depth":3,"charIndex":3625}],"domain":"","frontmatter":{},"version":""},{"id":15,"title":"演示","content":"#","routePath":"/EXAMPLE","lang":"zh-CN","toc":[],"domain":"","frontmatter":{},"version":""},{"id":16,"title":"pīnyīn (v2)","content":"#\n\npīnyīn, 汉字拼音转换工具。\n\n--------------------------------------------------------------------------------\n\n\n\n简体中文 | English\n\n转换中文字符为拼音。可以用于汉字注音、排序、检索。\n\n> 注：这个版本同时支持在 Node 和 Web 浏览器环境运行，\n> \n> Python 版请关注 mozillazg/python-pinyin\n\n--------------------------------------------------------------------------------\n\n\n特性#\n\n * 根据词组智能匹配最正确的拼音。\n * 支持多音字。\n * 简单的繁体支持。\n * 支持多种不同拼音风格。\n\n\n安装#\n\nvia npm:\n\n\n\n\n用法#\n\n开发者：\n\n\n\n命令行：\n\n\n\n\nAPI#\n\n\n方法 <Array> pinyin(words[, options])#\n\n将传入的中文字符串 (words) 转换成拼音符号串。\n\noptions 是可选的，可以设定拼音风格，或打开多音字选项。\n\n返回二维数组，第一维每个数组项位置对应每个中文字符串位置。 第二维是各个汉字的读音列表，多音字会有多个拼音项。\n\n\n方法 Number pinyin.compare(a, b)#\n\n按拼音排序的默认算法。\n\n\n参数#\n\n\n<Boolean> options.segment#\n\n是否启用分词模式，中文分词有助于极大的降低多音字问题。 但性能会极大的下降，内存也会使用更多。\n\n\n<Boolean> options.heteronym#\n\n是否启用多音字模式，默认关闭。\n\n关闭多音字模式时，返回每个汉字第一个匹配的拼音。\n\n启用多音字模式时，返回多音字的所有拼音列表。\n\n\n<Boolean> options.group#\n\n按词组分组拼音，例如：\n\n\n\n\n<Object> options.style#\n\n指定拼音 风格。可以通过以下几种 STYLE_ 开头的静态属性进行指定。\n\n\noptions.mode#\n\n拼音模式，默认 pinyin.MODE_NORMAL 普通模式。 如果你明确的在姓名场景下，可以使用 pinyin.MODE_SURNAME\n让姓氏使用更准确的拼音。\n\n\n静态属性#\n\n\n.STYLE_NORMAL#\n\n普通风格，即不带声调。\n\n如：pin yin\n\n\n.STYLE_TONE#\n\n声调风格，拼音声调在韵母第一个字母上。\n\n注：这是默认的风格。\n\n如：pīn yīn\n\n\n.STYLE_TONE2#\n\n声调风格 2，即拼音声调以数字形式在各个拼音之后，用数字 [0-4] 进行表示。\n\n如：pin1 yin1\n\n\n.STYLE_TO3NE#\n\n声调风格 3，即拼音声调以数字形式在注音字符之后，用数字 [0-4] 进行表示。\n\n如：pi1n yi1n\n\n\n.STYLE_INITIALS#\n\n声母风格，只返回各个拼音的声母部分。对于没有声母的汉字，返回空白字符串。\n\n如：中国 的拼音 zh g\n\n注：声明风格会区分 zh 和 z，ch 和 c，sh 和 s。\n\n注意：部分汉字没有声母，如 啊，饿 等，另外 y, w, yu 都不是声母， 这些汉字的拼音声母风格会返回 \"\"。请仔细考虑你的需求是否应该使用首字母风格。\n详情请参考 [为什么没有 y, w, yu 几个声母](#为什么没有 -y-w-yu- 几个声母)\n\n\n.STYLE_FIRST_LETTER#\n\n首字母风格，只返回拼音的首字母部分。\n\n如：p y\n\n\n.MODE_NORMAL#\n\n普通模式，自动识别读音。\n\n\n.MODE_SURNAME#\n\n姓名模式，对于明确的姓名场景，可以更准确的识别姓氏的读音。\n\n\nTest#\n\n\n\n\nQ&A#\n\n\n关于 Web 版如何使用#\n\n首先，我建议大家应该优先考虑在服务端一次性转换拼音并将结果持久化，避免在客户端每次转换损耗性能和体验。\n\n如果你坚持在客户端使用，你可以考虑使用 Webpack + Babel 来转换成低端浏览器的可执行代码。\n\n实在不想折腾，可以试试 https://www.jsdelivr.com/package/npm/pinyin\n\n\n为什么没有 y, w, yu 几个声母？#\n\n声母风格（INITIALS）下，“雨”、“我”、“圆”等汉字返回空字符串，因为根据《汉语拼音方案》， y，w，ü (yu)\n都不是声母，在某些特定韵母无声母时，才加上 y 或 w，而 ü 也有其特定规则。\n\n如果你觉得这个给你带来了麻烦，那么也请小心一些无声母的汉字（如“啊”、“饿”、“按”、“昂”等）。 这时候你也许需要的是首字母风格（FIRST_LETTER）。\n\n\n如何实现按拼音排序？#\n\npinyin 模块提供了默认的排序方案：\n\n\n\n如果默认的比较方法不能满足你的需求，你可以自定义 pinyinCompare 方法：\n\n\n\n\nnode 版和 web 版有什么异同？#\n\npinyin 目前可以同时运行在 Node 服务器端和 Web 浏览器端。 API 和使用方式完成一致。\n\n但 Web 版较 Node 版稍简单，拼音库只有常用字部分，没有使用分词算法， 并且考虑了网络传输对词库进行了压缩处理。\n\n由于分词和繁体中文的特性，部分情况下的结果也不尽相同。\n\n特性       WEB 版             NODE 版\n拼音库      常用字库。压缩、合并        完整字库。不压缩、合并\n分词       没有分词              使用分词算法，多音字拼音更准确。\n拼音频度排序   有根据拼音使用频度优先级排序。   同 Web 版。\n繁体中文     没有繁体中文支持。         有简单的繁简汉字转换。\n\n由于这些区别，测试不同运行环境的用例也不尽相同。\n\n\n捐赠#\n\n如果这个模块有帮助到您，请 Star 这个仓库。\n\n你也可以选择使用支付宝或微信给我捐赠：\n\n\n许可证#\n\nMIT","routePath":"/api/v2/","lang":"zh-CN","toc":[{"text":"特性","id":"特性","depth":2,"charIndex":307},{"text":"安装","id":"安装","depth":2,"charIndex":370},{"text":"用法","id":"用法","depth":2,"charIndex":388},{"text":"API","id":"api","depth":2,"charIndex":410},{"text":"方法 `<Array> pinyin(words[, options])`","id":"方法-array-pinyinwords-options","depth":3,"charIndex":-1},{"text":"方法 `Number pinyin.compare(a, b)`","id":"方法-number-pinyincomparea-b","depth":3,"charIndex":-1},{"text":"参数","id":"参数","depth":2,"charIndex":622},{"text":"`<Boolean> options.segment`","id":"boolean-optionssegment","depth":3,"charIndex":-1},{"text":"`<Boolean> options.heteronym`","id":"boolean-optionsheteronym","depth":3,"charIndex":-1},{"text":"`<Boolean> options.group`","id":"boolean-optionsgroup","depth":3,"charIndex":-1},{"text":"`<Object> options.style`","id":"object-optionsstyle","depth":3,"charIndex":-1},{"text":"options.mode","id":"optionsmode","depth":3,"charIndex":910},{"text":"静态属性","id":"静态属性","depth":2,"charIndex":1011},{"text":"`.STYLE_NORMAL`","id":"style_normal","depth":3,"charIndex":-1},{"text":"`.STYLE_TONE`","id":"style_tone","depth":3,"charIndex":-1},{"text":"`.STYLE_TONE2`","id":"style_tone2","depth":3,"charIndex":-1},{"text":"`.STYLE_TO3NE`","id":"style_to3ne","depth":3,"charIndex":-1},{"text":"`.STYLE_INITIALS`","id":"style_initials","depth":3,"charIndex":-1},{"text":"`.STYLE_FIRST_LETTER`","id":"style_first_letter","depth":3,"charIndex":-1},{"text":"`.MODE_NORMAL`","id":"mode_normal","depth":3,"charIndex":-1},{"text":"`.MODE_SURNAME`","id":"mode_surname","depth":3,"charIndex":-1},{"text":"Test","id":"test","depth":2,"charIndex":1624},{"text":"Q&A","id":"qa","depth":2,"charIndex":1634},{"text":"关于 Web 版如何使用","id":"关于-web-版如何使用","depth":3,"charIndex":1641},{"text":"为什么没有 `y`, `w`, `yu` 几个声母？","id":"为什么没有-y-w-yu-几个声母","depth":3,"charIndex":-1},{"text":"如何实现按拼音排序？","id":"如何实现按拼音排序","depth":3,"charIndex":2031},{"text":"node 版和 web 版有什么异同？","id":"node-版和-web-版有什么异同","depth":3,"charIndex":2115},{"text":"捐赠","id":"捐赠","depth":2,"charIndex":2502},{"text":"许可证","id":"许可证","depth":2,"charIndex":2555}],"domain":"","frontmatter":{"nav":{"second":{"title":"2.x","order":2}}},"version":""},{"id":17,"title":"pīnyīn (v3)","content":"#\n\npīnyīn, 汉字拼音转换工具。\n\n--------------------------------------------------------------------------------\n\n\n\n简体中文 | English | 한국어\n\n转换中文字符为拼音。可以用于汉字注音、排序、检索。\n\n> 注：这个版本同时支持在 Node 和 Web 浏览器环境运行，\n> \n> Python 版请关注 mozillazg/python-pinyin\n\n--------------------------------------------------------------------------------\n\n\n特性#\n\n * 根据词组智能匹配最正确的拼音。\n * 支持多音字。\n * 简单的繁体支持。\n * 支持多种不同拼音风格。\n\n\n安装#\n\nvia npm:\n\n\n\n\n用法#\n\n开发者：\n\n\n\n命令行：\n\n\n\n\n类型#\n\n\nIPinyinOptions#\n\n传入给 pinyin 方法的第二个参数的选项类型。\n\n\n\n\nIPinyinStyle#\n\n输出拼音格式。可以从直接使用以下字符串或数字，也兼容 v2 版本中 pinyin.STYLE_TONE 这样的形式。\n\n\n\n\nIPinyinMode#\n\n拼音模式，默认普通模式，可以指定人名模式。\n\n\n\n\nIPinyinSegment#\n\n分词方式。\n\n * 默认关闭 false，\n * 也可以设置为 true 开启，Web 和 Node 版中均使用 \"Intl.Segmenter\" 分词。\n * 也可以声明以下字符串来指定分词算法。但目前 Web 版只支持 \"Intl.Segmenter\" 和 \"segmentit\" 分词。\n\n\n\n\nAPI#\n\n\n方法 <Array> pinyin(words: string[, options: IPinyinOptions])#\n\n将传入的中文字符串 (words) 转换成拼音符号串。\n\noptions 是可选的，可以设定拼音风格，或打开多音字选项。\n\n返回二维数组，第一维每个数组项位置对应每个中文字符串位置。 第二维是各个汉字的读音列表，多音字会有多个拼音项。\n\n\n方法 Number compare(a, b)#\n\n按拼音排序的默认算法。\n\n\n方法 string[][] compact(pinyinResult array[][])#\n\n将拼音多音字以各种可能的组合排列变换成紧凑形式。参考 options.compact\n\n\n参数#\n\n\n<Boolean|IPinyinSegment> options.segment#\n\n是否启用分词模式，中文分词有助于极大的降低多音字问题。 但性能会极大的下降，内存也会使用更多。\n\n * 默认不启用分词。\n * 如果 segemnt = true，默认使用 Intl.Segmenter 分词。\n * 可以指定 \"Intl.Segmenter\"、\"nodejieba\"、\"segmentit\"、\"@node-rs/jieba\" 进行分词。\n\n\n<Boolean> options.heteronym#\n\n是否启用多音字模式，默认关闭。\n\n关闭多音字模式时，返回每个汉字第一个匹配的拼音。\n\n启用多音字模式时，返回多音字的所有拼音列表。\n\n\n<Boolean> options.group#\n\n按词组分组拼音，例如：\n\n\n\n\n<IPinyinStyle> options.style#\n\n指定拼音风格。可以使用以下特定字符串或数值指定：\n\n\n\nNORMAL, normal#\n\n普通风格，即不带声调。\n\n如：pin yin\n\nTONE, tone#\n\n声调风格，拼音声调在韵母第一个字母上。\n\n注：这是默认的风格。\n\n如：pīn yīn\n\nTONE2, tone2#\n\n声调风格 2，即拼音声调以数字形式在各个拼音之后，用数字 [0-4] 进行表示。\n\n如：pin1 yin1\n\nTO3NE, to3ne#\n\n声调风格 3，即拼音声调以数字形式在注音字符之后，用数字 [0-4] 进行表示。\n\n如：pi1n yi1n\n\nINITIALS, initials#\n\n声母风格，只返回各个拼音的声母部分。对于没有声母的汉字，返回空白字符串。\n\n如：中国 的拼音 zh g\n\n注：声母风格会区分 zh 和 z，ch 和 c，sh 和 s。\n\n注意：部分汉字没有声母，如 啊，饿 等，另外 y, w, yu 都不是声母， 这些汉字的拼音声母风格会返回 \"\"。请仔细考虑你的需求是否应该使用首字母风格。\n详情请参考 [为什么没有 y, w, yu 几个声母](#为什么没有 -y-w-yu- 几个声母)\n\nFIRST_LETTER, first_letter#\n\n首字母风格，只返回拼音的首字母部分。\n\n如：p y\n\nPASSPORT, passport#\n\n护照风格。转换成大写形式，并且 ü 会以 YU 形式输出。\n\n国家移民管理局门户网站于2021年9月29日发布了《关于内地居民拼音姓名中字母“ü”在出入境证件中打印规则的公告》（以下简称公告），根据《中国人名汉语拼音字母拼\n写规则》和《关于机读旅行证件的相关国际通用规范》，\n内地居民申办出入境证件，出入境证件上打印的持证人拼音姓名中，Lü（吕等字）、Nü（女等字）中的字母“ü”应当转换为“YU”，LüE（略等字）、NüE（虐等字）中\n的字母“ü”应当转换为“U”。\n\n\noptions.mode#\n\n拼音模式，默认 \"NORMAL\" 普通模式。 如果你明确的在姓名场景下，可以使用 \"SURNAME\" 让姓氏使用更准确的拼音。\n\n * NORMAL：普通模式，自动识别读音。\n * SURNAME：姓名模式，对于明确的姓名场景，可以更准确的识别姓氏的读音。\n\n\noptions.compact#\n\n是否返回紧凑模式，默认 false，按标准格式返回。 如果设置为 true，则将多音字可能的各种组合排列后返回。例如：\n\n\n\n你也可以必要时使用 compact() 函数处理 pinyin(han, {compact:false}) 返回的结果。\n\n\nTest#\n\n\n\n\nQ&A#\n\n\n关于 Web 版如何使用#\n\n首先，我建议大家应该优先考虑在服务端一次性转换拼音并将结果持久化，避免在客户端每次转换损耗性能和体验。\n\n如果你坚持在客户端使用，你可以考虑使用 Webpack + Babel 来转换成低端浏览器的可执行代码。\n\n实在不想折腾，可以试试 https://www.jsdelivr.com/package/npm/pinyin\n\n\n为什么没有 y, w, yu 几个声母？#\n\n声母风格（INITIALS）下，“雨”、“我”、“圆”等汉字返回空字符串，因为根据《汉语拼音方案》， y，w，ü (yu)\n都不是声母，在某些特定韵母无声母时，才加上 y 或 w，而 ü 也有其特定规则。\n\n如果你觉得这个给你带来了麻烦，那么也请小心一些无声母的汉字（如“啊”、“饿”、“按”、“昂”等）。 这时候你也许需要的是首字母风格（FIRST_LETTER）。\n\n\n如何实现按拼音排序？#\n\npinyin 模块提供了默认的排序方案：\n\n\n\n如果默认的比较方法不能满足你的需求，你可以自定义 pinyinCompare 方法：\n\n\n\n\nnode 版和 web 版有什么异同？#\n\npinyin 目前可以同时运行在 Node 服务器端和 Web 浏览器端。 API 和使用方式完成一致。\n\n但 Web 版较 Node 版稍简单，拼音库只有常用字部分，没有使用分词算法， 并且考虑了网络传输对词库进行了压缩处理。\n\n由于分词和繁体中文的特性，部分情况下的结果也不尽相同。\n\n特性       WEB 版             NODE 版\n拼音库      常用字库。压缩、合并        完整字库。不压缩、合并\n分词       没有分词              使用分词算法，多音字拼音更准确。\n拼音频度排序   有根据拼音使用频度优先级排序。   同 Web 版。\n繁体中文     没有繁体中文支持。         有简单的繁简汉字转换。\n\n由于这些区别，测试不同运行环境的用例也不尽相同。\n\n\n捐赠#\n\n如果这个模块有帮助到您，请 Star 这个仓库。\n\n你也可以选择使用支付宝或微信给我捐赠：\n\n\n许可证#\n\nMIT","routePath":"/api/v3/","lang":"zh-CN","toc":[{"text":"特性","id":"特性","depth":2,"charIndex":313},{"text":"安装","id":"安装","depth":2,"charIndex":376},{"text":"用法","id":"用法","depth":2,"charIndex":394},{"text":"类型","id":"类型","depth":2,"charIndex":416},{"text":"IPinyinOptions","id":"ipinyinoptions","depth":3,"charIndex":422},{"text":"IPinyinStyle","id":"ipinyinstyle","depth":3,"charIndex":469},{"text":"IPinyinMode","id":"ipinyinmode","depth":3,"charIndex":547},{"text":"IPinyinSegment","id":"ipinyinsegment","depth":3,"charIndex":587},{"text":"API","id":"api","depth":2,"charIndex":755},{"text":"方法 `<Array> pinyin(words: string[, options: IPinyinOptions])`","id":"方法-array-pinyinwords-string-options-ipinyinoptions","depth":3,"charIndex":-1},{"text":"方法 `Number compare(a, b)`","id":"方法-number-comparea-b","depth":3,"charIndex":-1},{"text":"方法 `string[][] compact(pinyinResult array[][])`","id":"方法-string-compactpinyinresult-array","depth":3,"charIndex":-1},{"text":"参数","id":"参数","depth":2,"charIndex":1077},{"text":"`<Boolean|IPinyinSegment> options.segment`","id":"booleanipinyinsegment-optionssegment","depth":3,"charIndex":-1},{"text":"`<Boolean> options.heteronym`","id":"boolean-optionsheteronym","depth":3,"charIndex":-1},{"text":"`<Boolean> options.group`","id":"boolean-optionsgroup","depth":3,"charIndex":-1},{"text":"`<IPinyinStyle> options.style`","id":"ipinyinstyle-optionsstyle","depth":3,"charIndex":-1},{"text":"`NORMAL`, `normal`","id":"normal-normal","depth":4,"charIndex":-1},{"text":"`TONE`, `tone`","id":"tone-tone","depth":4,"charIndex":-1},{"text":"`TONE2`, `tone2`","id":"tone2-tone2","depth":4,"charIndex":-1},{"text":"`TO3NE`, `to3ne`","id":"to3ne-to3ne","depth":4,"charIndex":-1},{"text":"`INITIALS`, `initials`","id":"initials-initials","depth":4,"charIndex":-1},{"text":"`FIRST_LETTER`, `first_letter`","id":"first_letter-first_letter","depth":4,"charIndex":-1},{"text":"`PASSPORT`, `passport`","id":"passport-passport","depth":4,"charIndex":-1},{"text":" options.mode","id":"-optionsmode","depth":3,"charIndex":-1},{"text":" options.compact","id":"-optionscompact","depth":3,"charIndex":-1},{"text":"Test","id":"test","depth":2,"charIndex":2584},{"text":"Q&A","id":"qa","depth":2,"charIndex":2594},{"text":"关于 Web 版如何使用","id":"关于-web-版如何使用","depth":3,"charIndex":2601},{"text":"为什么没有 `y`, `w`, `yu` 几个声母？","id":"为什么没有-y-w-yu-几个声母","depth":3,"charIndex":-1},{"text":"如何实现按拼音排序？","id":"如何实现按拼音排序","depth":3,"charIndex":2991},{"text":"node 版和 web 版有什么异同？","id":"node-版和-web-版有什么异同","depth":3,"charIndex":3075},{"text":"捐赠","id":"捐赠","depth":2,"charIndex":3462},{"text":"许可证","id":"许可证","depth":2,"charIndex":3515}],"domain":"","frontmatter":{"nav":{"second":{"title":"3.x","order":1}}},"version":""},{"id":18,"title":"pīnyīn (v4)","content":"#\n\npīnyīn, 中文汉字拼音转换工具。\n\n--------------------------------------------------------------------------------\n\n\n\n简体中文 | English | 한국어\n\n转换中文字符为拼音。可以用于汉字注音、排序、检索。\n\n> 注：这个版本同时支持在 Node 和 Web 浏览器环境运行，\n> \n> Python 版请关注 mozillazg/python-pinyin\n\n--------------------------------------------------------------------------------\n\n\n特性#\n\n * 根据词组智能匹配最正确的拼音。\n * 支持多音字。\n * 简单的繁体支持。\n * 支持多种不同拼音风格。\n\n\n安装#\n\nvia npm:\n\n\n\n\n用法#\n\n开发者：\n\n\n\n命令行：\n\n\n\n\n类型#\n\n\nIPinyinOptions#\n\n传入给 pinyin 方法的第二个参数的选项类型。\n\n\n\n\nIPinyinStyle#\n\n输出拼音格式。可以从直接使用以下字符串或数字，也兼容 v2 版本中 pinyin.STYLE_TONE 这样的形式。\n\n\n\n\nIPinyinMode#\n\n拼音模式，默认普通模式，可以指定人名模式。\n\n\n\n\nIPinyinSegment#\n\n分词方式。\n\n * 默认关闭 false，\n * 也可以设置为 true 开启，Web 和 Node 版中均使用 \"Intl.Segmenter\" 分词。\n * 也可以声明以下字符串来指定分词算法。但目前 Web 版只支持 \"Intl.Segmenter\" 和 \"segmentit\" 分词。\n\n\n\n\nAPI#\n\n\n方法 <Array> pinyin(words: string[, options: IPinyinOptions])#\n\n将传入的中文字符串 (words) 转换成拼音符号串。\n\noptions 是可选的，可以设定拼音风格，或打开多音字选项。\n\n返回二维数组，第一维每个数组项位置对应每个中文字符串位置。 第二维是各个汉字的读音列表，多音字会有多个拼音项。\n\n\n方法 Number compare(a, b)#\n\n按拼音排序的默认算法。\n\n\n方法 string[][] compact(pinyinResult array[][])#\n\n将拼音多音字以各种可能的组合排列变换成紧凑形式。参考 options.compact\n\n\n参数#\n\n\n<Boolean|IPinyinSegment> options.segment#\n\n是否启用分词模式，中文分词有助于极大的降低多音字问题。 但性能会极大的下降，内存也会使用更多。\n\n * 默认不启用分词。\n * 如果 segemnt = true，默认使用 Intl.Segmenter 分词。\n * 可以指定 \"Intl.Segmenter\"、\"nodejieba\"、\"segmentit\"、\"@node-rs/jieba\" 进行分词。\n\n\n<Boolean> options.heteronym#\n\n是否启用多音字模式，默认关闭。\n\n关闭多音字模式时，返回每个汉字第一个匹配的拼音。\n\n启用多音字模式时，返回多音字的所有拼音列表。\n\n\n<Boolean> options.group#\n\n按词组分组拼音，例如：\n\n\n\n\n<IPinyinStyle> options.style#\n\n指定拼音风格。可以使用以下特定字符串或数值指定：\n\n\n\nNORMAL, normal#\n\n普通风格，即不带声调。\n\n如：pin yin\n\nTONE, tone#\n\n声调风格，拼音声调在韵母第一个字母上。\n\n注：这是默认的风格。\n\n如：pīn yīn\n\nTONE2, tone2#\n\n声调风格 2，即拼音声调以数字形式在各个拼音之后，用数字 [0-4] 进行表示。\n\n如：pin1 yin1\n\nTO3NE, to3ne#\n\n声调风格 3，即拼音声调以数字形式在注音字符之后，用数字 [0-4] 进行表示。\n\n如：pi1n yi1n\n\nINITIALS, initials#\n\n声母风格，只返回各个拼音的声母部分。对于没有声母的汉字，返回空白字符串。\n\n如：中国 的拼音 zh g\n\n注：声母风格会区分 zh 和 z，ch 和 c，sh 和 s。\n\n注意：部分汉字没有声母，如 啊，饿 等，另外 y, w, yu 都不是声母， 这些汉字的拼音声母风格会返回 \"\"。请仔细考虑你的需求是否应该使用首字母风格。\n详情请参考 [为什么没有 y, w, yu 几个声母](#为什么没有 -y-w-yu- 几个声母)\n\nFIRST_LETTER, first_letter#\n\n首字母风格，只返回拼音的首字母部分。\n\n如：p y\n\nPASSPORT, passport#\n\n护照风格。转换成大写形式，并且 ü 会以 YU 形式输出。\n\n国家移民管理局门户网站于2021年9月29日发布了《关于内地居民拼音姓名中字母“ü”在出入境证件中打印规则的公告》（以下简称公告），根据《中国人名汉语拼音字母拼\n写规则》和《关于机读旅行证件的相关国际通用规范》，\n内地居民申办出入境证件，出入境证件上打印的持证人拼音姓名中，Lü（吕等字）、Nü（女等字）中的字母“ü”应当转换为“YU”，LüE（略等字）、NüE（虐等字）中\n的字母“ü”应当转换为“U”。\n\n\noptions.mode#\n\n拼音模式，默认 \"NORMAL\" 普通模式。 如果你明确的在姓名场景下，可以使用 \"SURNAME\" 让姓氏使用更准确的拼音。\n\n * NORMAL：普通模式，自动识别读音。\n * SURNAME：姓名模式，对于明确的姓名场景，可以更准确的识别姓氏的读音。\n\n\noptions.compact#\n\n是否返回紧凑模式，默认 false，按标准格式返回。 如果设置为 true，则将多音字可能的各种组合排列后返回。例如：\n\n\n\n你也可以必要时使用 compact() 函数处理 pinyin(han, {compact:false}) 返回的结果。\n\n\nTest#\n\n\n\n\nQ&A#\n\n\n关于 Web 版如何使用#\n\n首先，我建议大家应该优先考虑在服务端一次性转换拼音并将结果持久化，避免在客户端每次转换损耗性能和体验。\n\n如果你坚持在客户端使用，你可以考虑使用 Webpack + Babel 来转换成低端浏览器的可执行代码。\n\n实在不想折腾，可以试试 https://www.jsdelivr.com/package/npm/pinyin\n\n\n为什么没有 y, w, yu 几个声母？#\n\n声母风格（INITIALS）下，“雨”、“我”、“圆”等汉字返回空字符串，因为根据《汉语拼音方案》， y，w，ü (yu)\n都不是声母，在某些特定韵母无声母时，才加上 y 或 w，而 ü 也有其特定规则。\n\n如果你觉得这个给你带来了麻烦，那么也请小心一些无声母的汉字（如“啊”、“饿”、“按”、“昂”等）。 这时候你也许需要的是首字母风格（FIRST_LETTER）。\n\n\n如何实现按拼音排序？#\n\npinyin 模块提供了默认的排序方案：\n\n\n\n如果默认的比较方法不能满足你的需求，你可以自定义 pinyinCompare 方法：\n\n\n\n\nnode 版和 web 版有什么异同？#\n\npinyin 目前可以同时运行在 Node 服务器端和 Web 浏览器端。 API 和使用方式完成一致。\n\n但 Web 版较 Node 版稍简单，拼音库只有常用字部分，没有使用分词算法， 并且考虑了网络传输对词库进行了压缩处理。\n\n由于分词和繁体中文的特性，部分情况下的结果也不尽相同。\n\n特性       WEB 版             NODE 版\n拼音库      常用字库。压缩、合并        完整字库。不压缩、合并\n分词       没有分词              使用分词算法，多音字拼音更准确。\n拼音频度排序   有根据拼音使用频度优先级排序。   同 Web 版。\n繁体中文     没有繁体中文支持。         有简单的繁简汉字转换。\n\n由于这些区别，测试不同运行环境的用例也不尽相同。\n\n\n捐赠#\n\n如果这个模块有帮助到您，请 Star 这个仓库。\n\n你也可以选择使用支付宝或微信给我捐赠：\n\n\n许可证#\n\nMIT","routePath":"/api/v4/","lang":"zh-CN","toc":[{"text":"特性","id":"特性","depth":2,"charIndex":315},{"text":"安装","id":"安装","depth":2,"charIndex":378},{"text":"用法","id":"用法","depth":2,"charIndex":396},{"text":"类型","id":"类型","depth":2,"charIndex":418},{"text":"IPinyinOptions","id":"ipinyinoptions","depth":3,"charIndex":424},{"text":"IPinyinStyle","id":"ipinyinstyle","depth":3,"charIndex":471},{"text":"IPinyinMode","id":"ipinyinmode","depth":3,"charIndex":549},{"text":"IPinyinSegment","id":"ipinyinsegment","depth":3,"charIndex":589},{"text":"API","id":"api","depth":2,"charIndex":757},{"text":"方法 `<Array> pinyin(words: string[, options: IPinyinOptions])`","id":"方法-array-pinyinwords-string-options-ipinyinoptions","depth":3,"charIndex":-1},{"text":"方法 `Number compare(a, b)`","id":"方法-number-comparea-b","depth":3,"charIndex":-1},{"text":"方法 `string[][] compact(pinyinResult array[][])`","id":"方法-string-compactpinyinresult-array","depth":3,"charIndex":-1},{"text":"参数","id":"参数","depth":2,"charIndex":1079},{"text":"`<Boolean|IPinyinSegment> options.segment`","id":"booleanipinyinsegment-optionssegment","depth":3,"charIndex":-1},{"text":"`<Boolean> options.heteronym`","id":"boolean-optionsheteronym","depth":3,"charIndex":-1},{"text":"`<Boolean> options.group`","id":"boolean-optionsgroup","depth":3,"charIndex":-1},{"text":"`<IPinyinStyle> options.style`","id":"ipinyinstyle-optionsstyle","depth":3,"charIndex":-1},{"text":"`NORMAL`, `normal`","id":"normal-normal","depth":4,"charIndex":-1},{"text":"`TONE`, `tone`","id":"tone-tone","depth":4,"charIndex":-1},{"text":"`TONE2`, `tone2`","id":"tone2-tone2","depth":4,"charIndex":-1},{"text":"`TO3NE`, `to3ne`","id":"to3ne-to3ne","depth":4,"charIndex":-1},{"text":"`INITIALS`, `initials`","id":"initials-initials","depth":4,"charIndex":-1},{"text":"`FIRST_LETTER`, `first_letter`","id":"first_letter-first_letter","depth":4,"charIndex":-1},{"text":"`PASSPORT`, `passport`","id":"passport-passport","depth":4,"charIndex":-1},{"text":" options.mode","id":"-optionsmode","depth":3,"charIndex":-1},{"text":" options.compact","id":"-optionscompact","depth":3,"charIndex":-1},{"text":"Test","id":"test","depth":2,"charIndex":2586},{"text":"Q&A","id":"qa","depth":2,"charIndex":2596},{"text":"关于 Web 版如何使用","id":"关于-web-版如何使用","depth":3,"charIndex":2603},{"text":"为什么没有 `y`, `w`, `yu` 几个声母？","id":"为什么没有-y-w-yu-几个声母","depth":3,"charIndex":-1},{"text":"如何实现按拼音排序？","id":"如何实现按拼音排序","depth":3,"charIndex":2993},{"text":"node 版和 web 版有什么异同？","id":"node-版和-web-版有什么异同","depth":3,"charIndex":3077},{"text":"捐赠","id":"捐赠","depth":2,"charIndex":3464},{"text":"许可证","id":"许可证","depth":2,"charIndex":3517}],"domain":"","frontmatter":{"nav":{"second":{"title":"3.x","order":1}}},"version":""},{"id":19,"title":"pīnyīn (v4)","content":"#\n\npīnyīn, 中文汉字拼音转换工具。\n\n--------------------------------------------------------------------------------\n\n\n\n简体中文 | English | 한국어\n\n转换中文字符为拼音。可以用于汉字注音、排序、检索。\n\n> 注：这个版本同时支持在 Node 和 Web 浏览器环境运行，\n> \n> Python 版请关注 mozillazg/python-pinyin\n\n--------------------------------------------------------------------------------\n\n\n特性#\n\n * 根据词组智能匹配最正确的拼音。\n * 支持多音字。\n * 简单的繁体支持。\n * 支持多种不同拼音风格。\n\n\n安装#\n\nvia npm:\n\n\n\n\n用法#\n\n开发者：\n\n\n\n命令行：\n\n\n\n\n类型#\n\n\nIPinyinOptions#\n\n传入给 pinyin 方法的第二个参数的选项类型。\n\n\n\n\nIPinyinStyle#\n\n输出拼音格式。可以从直接使用以下字符串或数字，也兼容 v2 版本中 pinyin.STYLE_TONE 这样的形式。\n\n\n\n\nIPinyinMode#\n\n拼音模式，默认普通模式，可以指定人名模式。\n\n\n\n\nIPinyinSegment#\n\n分词方式。\n\n * 默认关闭 false，\n * 也可以设置为 true 开启，Web 和 Node 版中均使用 \"Intl.Segmenter\" 分词。\n * 也可以声明以下字符串来指定分词算法。但目前 Web 版只支持 \"Intl.Segmenter\" 和 \"segmentit\" 分词。\n\n\n\n\nAPI#\n\n\n方法 <Array> pinyin(words: string[, options: IPinyinOptions])#\n\n将传入的中文字符串 (words) 转换成拼音符号串。\n\noptions 是可选的，可以设定拼音风格，或打开多音字选项。\n\n返回二维数组，第一维每个数组项位置对应每个中文字符串位置。 第二维是各个汉字的读音列表，多音字会有多个拼音项。\n\n\n方法 Number compare(a, b)#\n\n按拼音排序的默认算法。\n\n\n方法 string[][] compact(pinyinResult array[][])#\n\n将拼音多音字以各种可能的组合排列变换成紧凑形式。参考 options.compact\n\n\n参数#\n\n\n<Boolean|IPinyinSegment> options.segment#\n\n是否启用分词模式，中文分词有助于极大的降低多音字问题。 但性能会极大的下降，内存也会使用更多。\n\n * 默认不启用分词。\n * 如果 segemnt = true，默认使用 Intl.Segmenter 分词。\n * 可以指定 \"Intl.Segmenter\"、\"nodejieba\"、\"segmentit\"、\"@node-rs/jieba\" 进行分词。\n\n\n<Boolean> options.heteronym#\n\n是否启用多音字模式，默认关闭。\n\n关闭多音字模式时，返回每个汉字第一个匹配的拼音。\n\n启用多音字模式时，返回多音字的所有拼音列表。\n\n\n<Boolean> options.group#\n\n按词组分组拼音，例如：\n\n\n\n\n<IPinyinStyle> options.style#\n\n指定拼音风格。可以使用以下特定字符串或数值指定：\n\n\n\nNORMAL, normal#\n\n普通风格，即不带声调。\n\n如：pin yin\n\nTONE, tone#\n\n声调风格，拼音声调在韵母第一个字母上。\n\n注：这是默认的风格。\n\n如：pīn yīn\n\nTONE2, tone2#\n\n声调风格 2，即拼音声调以数字形式在各个拼音之后，用数字 [0-4] 进行表示。\n\n如：pin1 yin1\n\nTO3NE, to3ne#\n\n声调风格 3，即拼音声调以数字形式在注音字符之后，用数字 [0-4] 进行表示。\n\n如：pi1n yi1n\n\nINITIALS, initials#\n\n声母风格，只返回各个拼音的声母部分。对于没有声母的汉字，返回空白字符串。\n\n如：中国 的拼音 zh g\n\n注：声母风格会区分 zh 和 z，ch 和 c，sh 和 s。\n\n注意：部分汉字没有声母，如 啊，饿 等，另外 y, w, yu 都不是声母， 这些汉字的拼音声母风格会返回 \"\"。请仔细考虑你的需求是否应该使用首字母风格。\n详情请参考 [为什么没有 y, w, yu 几个声母](#为什么没有 -y-w-yu- 几个声母)\n\nFIRST_LETTER, first_letter#\n\n首字母风格，只返回拼音的首字母部分。\n\n如：p y\n\nPASSPORT, passport#\n\n护照风格。转换成大写形式，并且 ü 会以 YU 形式输出。\n\n国家移民管理局门户网站于2021年9月29日发布了《关于内地居民拼音姓名中字母“ü”在出入境证件中打印规则的公告》（以下简称公告），根据《中国人名汉语拼音字母拼\n写规则》和《关于机读旅行证件的相关国际通用规范》，\n内地居民申办出入境证件，出入境证件上打印的持证人拼音姓名中，Lü（吕等字）、Nü（女等字）中的字母“ü”应当转换为“YU”，LüE（略等字）、NüE（虐等字）中\n的字母“ü”应当转换为“U”。\n\n\noptions.mode#\n\n拼音模式，默认 \"NORMAL\" 普通模式。 如果你明确的在姓名场景下，可以使用 \"SURNAME\" 让姓氏使用更准确的拼音。\n\n * NORMAL：普通模式，自动识别读音。\n * SURNAME：姓名模式，对于明确的姓名场景，可以更准确的识别姓氏的读音。\n\n\noptions.compact#\n\n是否返回紧凑模式，默认 false，按标准格式返回。 如果设置为 true，则将多音字可能的各种组合排列后返回。例如：\n\n\n\n你也可以必要时使用 compact() 函数处理 pinyin(han, {compact:false}) 返回的结果。\n\n\nTest#\n\n\n\n\nQ&A#\n\n\n关于 Web 版如何使用#\n\n首先，我建议大家应该优先考虑在服务端一次性转换拼音并将结果持久化，避免在客户端每次转换损耗性能和体验。\n\n如果你坚持在客户端使用，你可以考虑使用 Webpack + Babel 来转换成低端浏览器的可执行代码。\n\n实在不想折腾，可以试试 https://www.jsdelivr.com/package/npm/pinyin\n\n\n为什么没有 y, w, yu 几个声母？#\n\n声母风格（INITIALS）下，“雨”、“我”、“圆”等汉字返回空字符串，因为根据《汉语拼音方案》， y，w，ü (yu)\n都不是声母，在某些特定韵母无声母时，才加上 y 或 w，而 ü 也有其特定规则。\n\n如果你觉得这个给你带来了麻烦，那么也请小心一些无声母的汉字（如“啊”、“饿”、“按”、“昂”等）。 这时候你也许需要的是首字母风格（FIRST_LETTER）。\n\n\n如何实现按拼音排序？#\n\npinyin 模块提供了默认的排序方案：\n\n\n\n如果默认的比较方法不能满足你的需求，你可以自定义 pinyinCompare 方法：\n\n\n\n\nnode 版和 web 版有什么异同？#\n\npinyin 目前可以同时运行在 Node 服务器端和 Web 浏览器端。 API 和使用方式完成一致。\n\n但 Web 版较 Node 版稍简单，拼音库只有常用字部分，没有使用分词算法， 并且考虑了网络传输对词库进行了压缩处理。\n\n由于分词和繁体中文的特性，部分情况下的结果也不尽相同。\n\n特性       WEB 版             NODE 版\n拼音库      常用字库。压缩、合并        完整字库。不压缩、合并\n分词       没有分词              使用分词算法，多音字拼音更准确。\n拼音频度排序   有根据拼音使用频度优先级排序。   同 Web 版。\n繁体中文     没有繁体中文支持。         有简单的繁简汉字转换。\n\n由于这些区别，测试不同运行环境的用例也不尽相同。\n\n\n捐赠#\n\n如果这个模块有帮助到您，请 Star 这个仓库。\n\n你也可以选择使用支付宝或微信给我捐赠：\n\n\n许可证#\n\nMIT","routePath":"/","lang":"zh-CN","toc":[{"text":"特性","id":"特性","depth":2,"charIndex":315},{"text":"安装","id":"安装","depth":2,"charIndex":378},{"text":"用法","id":"用法","depth":2,"charIndex":396},{"text":"类型","id":"类型","depth":2,"charIndex":418},{"text":"IPinyinOptions","id":"ipinyinoptions","depth":3,"charIndex":424},{"text":"IPinyinStyle","id":"ipinyinstyle","depth":3,"charIndex":471},{"text":"IPinyinMode","id":"ipinyinmode","depth":3,"charIndex":549},{"text":"IPinyinSegment","id":"ipinyinsegment","depth":3,"charIndex":589},{"text":"API","id":"api","depth":2,"charIndex":757},{"text":"方法 `<Array> pinyin(words: string[, options: IPinyinOptions])`","id":"方法-array-pinyinwords-string-options-ipinyinoptions","depth":3,"charIndex":-1},{"text":"方法 `Number compare(a, b)`","id":"方法-number-comparea-b","depth":3,"charIndex":-1},{"text":"方法 `string[][] compact(pinyinResult array[][])`","id":"方法-string-compactpinyinresult-array","depth":3,"charIndex":-1},{"text":"参数","id":"参数","depth":2,"charIndex":1079},{"text":"`<Boolean|IPinyinSegment> options.segment`","id":"booleanipinyinsegment-optionssegment","depth":3,"charIndex":-1},{"text":"`<Boolean> options.heteronym`","id":"boolean-optionsheteronym","depth":3,"charIndex":-1},{"text":"`<Boolean> options.group`","id":"boolean-optionsgroup","depth":3,"charIndex":-1},{"text":"`<IPinyinStyle> options.style`","id":"ipinyinstyle-optionsstyle","depth":3,"charIndex":-1},{"text":"`NORMAL`, `normal`","id":"normal-normal","depth":4,"charIndex":-1},{"text":"`TONE`, `tone`","id":"tone-tone","depth":4,"charIndex":-1},{"text":"`TONE2`, `tone2`","id":"tone2-tone2","depth":4,"charIndex":-1},{"text":"`TO3NE`, `to3ne`","id":"to3ne-to3ne","depth":4,"charIndex":-1},{"text":"`INITIALS`, `initials`","id":"initials-initials","depth":4,"charIndex":-1},{"text":"`FIRST_LETTER`, `first_letter`","id":"first_letter-first_letter","depth":4,"charIndex":-1},{"text":"`PASSPORT`, `passport`","id":"passport-passport","depth":4,"charIndex":-1},{"text":" options.mode","id":"-optionsmode","depth":3,"charIndex":-1},{"text":" options.compact","id":"-optionscompact","depth":3,"charIndex":-1},{"text":"Test","id":"test","depth":2,"charIndex":2586},{"text":"Q&A","id":"qa","depth":2,"charIndex":2596},{"text":"关于 Web 版如何使用","id":"关于-web-版如何使用","depth":3,"charIndex":2603},{"text":"为什么没有 `y`, `w`, `yu` 几个声母？","id":"为什么没有-y-w-yu-几个声母","depth":3,"charIndex":-1},{"text":"如何实现按拼音排序？","id":"如何实现按拼音排序","depth":3,"charIndex":2993},{"text":"node 版和 web 版有什么异同？","id":"node-版和-web-版有什么异同","depth":3,"charIndex":3077},{"text":"捐赠","id":"捐赠","depth":2,"charIndex":3464},{"text":"许可证","id":"许可证","depth":2,"charIndex":3517}],"domain":"","frontmatter":{},"version":""},{"id":20,"title":"拼音表","content":"#\n\n这是带声音的拼音表。可以用于发音练习和听力训练。\n\n点击拼音可以播放读音，将按第一声、第二声、第三声、第四声的顺序发音。","routePath":"/pinyin-table","lang":"zh-CN","toc":[],"domain":"","frontmatter":{"sidebar":false},"version":""}]